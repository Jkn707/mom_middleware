# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import mom_pb2 as mom__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in mom_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MessageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendMessage = channel.unary_unary(
                '/mom.MessageService/SendMessage',
                request_serializer=mom__pb2.MessageRequest.SerializeToString,
                response_deserializer=mom__pb2.MessageResponse.FromString,
                _registered_method=True)
        self.ReceiveMessage = channel.unary_unary(
                '/mom.MessageService/ReceiveMessage',
                request_serializer=mom__pb2.MessageRequest.SerializeToString,
                response_deserializer=mom__pb2.MessageResponse.FromString,
                _registered_method=True)
        self.CreateTopic = channel.unary_unary(
                '/mom.MessageService/CreateTopic',
                request_serializer=mom__pb2.TopicRequest.SerializeToString,
                response_deserializer=mom__pb2.MessageResponse.FromString,
                _registered_method=True)


class MessageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendMessage(self, request, context):
        """Sends a message to a topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveMessage(self, request, context):
        """Receives a message from a topic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTopic(self, request, context):
        """Creates a topic 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=mom__pb2.MessageRequest.FromString,
                    response_serializer=mom__pb2.MessageResponse.SerializeToString,
            ),
            'ReceiveMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveMessage,
                    request_deserializer=mom__pb2.MessageRequest.FromString,
                    response_serializer=mom__pb2.MessageResponse.SerializeToString,
            ),
            'CreateTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTopic,
                    request_deserializer=mom__pb2.TopicRequest.FromString,
                    response_serializer=mom__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mom.MessageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mom.MessageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MessageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mom.MessageService/SendMessage',
            mom__pb2.MessageRequest.SerializeToString,
            mom__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mom.MessageService/ReceiveMessage',
            mom__pb2.MessageRequest.SerializeToString,
            mom__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mom.MessageService/CreateTopic',
            mom__pb2.TopicRequest.SerializeToString,
            mom__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class MasterServiceStub(object):
    """Master Node service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNextInstance = channel.unary_unary(
                '/mom.MasterService/GetNextInstance',
                request_serializer=mom__pb2.Empty.SerializeToString,
                response_deserializer=mom__pb2.InstanceResponse.FromString,
                _registered_method=True)
        self.RegisterMOMInstance = channel.unary_unary(
                '/mom.MasterService/RegisterMOMInstance',
                request_serializer=mom__pb2.MOMInstanceRegistrationRequest.SerializeToString,
                response_deserializer=mom__pb2.MessageResponse.FromString,
                _registered_method=True)


class MasterServiceServicer(object):
    """Master Node service
    """

    def GetNextInstance(self, request, context):
        """Get the next MOM instance from the master node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterMOMInstance(self, request, context):
        """Register a MOM instance with the master node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MasterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNextInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextInstance,
                    request_deserializer=mom__pb2.Empty.FromString,
                    response_serializer=mom__pb2.InstanceResponse.SerializeToString,
            ),
            'RegisterMOMInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterMOMInstance,
                    request_deserializer=mom__pb2.MOMInstanceRegistrationRequest.FromString,
                    response_serializer=mom__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mom.MasterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mom.MasterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MasterService(object):
    """Master Node service
    """

    @staticmethod
    def GetNextInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mom.MasterService/GetNextInstance',
            mom__pb2.Empty.SerializeToString,
            mom__pb2.InstanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterMOMInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mom.MasterService/RegisterMOMInstance',
            mom__pb2.MOMInstanceRegistrationRequest.SerializeToString,
            mom__pb2.MessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
